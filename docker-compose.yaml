version: "3.7"

services:
  mysql:
    image: mysql:8.0
    container_name: mysql_youmed
    volumes:
      - ./.data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_HOST=%
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
    networks:
      - youmed
    ports:
      - "3306:3306"
    command:
      [
        "mysqld",
        "--character-set-server=utf8mb4",
        "--collation-server=utf8mb4_unicode_ci",
        "--default-authentication-plugin=mysql_native_password",
      ]
  fetchbasedata:
    container_name: fetchbasedata_youmed
    image: backend-base
    build:
      context: .
      dockerfile: Dockerfile
      target: backend-base
    environment:
      - YOUTUBE_CLIENT_SECRET=${YOUTUBE_CLIENT_SECRET}
      - APP_SECRET_KEY=${APP_SECRET_KEY}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_HOST=mysql
      - APP_HOST=${APP_HOST}
    networks:
      - youmed
    depends_on:
      - mysql
      - backend
    restart: on-failure
    entrypoint: python manage.py fetchbasedata
  fetchfulldata:
    container_name: fetchfulldata_youmed
    image: backend-base
    build:
      context: .
      dockerfile: Dockerfile
      target: backend-base
    environment:
      - YOUTUBE_CLIENT_SECRET=${YOUTUBE_CLIENT_SECRET}
      - APP_SECRET_KEY=${APP_SECRET_KEY}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_HOST=mysql
      - APP_HOST=${APP_HOST}
    networks:
      - youmed
    depends_on:
      - mysql
      - backend
    restart: on-failure
    entrypoint: python manage.py fetchfulldata
  filtervideos:
    container_name: filtervideos_youmed
    image: backend-base
    build:
      context: .
      dockerfile: Dockerfile
      target: backend-base
    environment:
      - YOUTUBE_CLIENT_SECRET=${YOUTUBE_CLIENT_SECRET}
      - APP_SECRET_KEY=${APP_SECRET_KEY}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_HOST=mysql
      - APP_HOST=${APP_HOST}
    networks:
      - youmed
    depends_on:
      - mysql
      - backend
    restart: on-failure
    entrypoint: python manage.py filtervideos
  periodicdataupdate:
    container_name: periodicdataupdate_youmed
    image: backend-base
    build:
      context: .
      dockerfile: Dockerfile
      target: backend-base
    environment:
      - YOUTUBE_CLIENT_SECRET=${YOUTUBE_CLIENT_SECRET}
      - APP_SECRET_KEY=${APP_SECRET_KEY}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_HOST=mysql
      - APP_HOST=${APP_HOST}
    networks:
      - youmed
    depends_on:
      - mysql
      - backend
    restart: on-failure
    entrypoint: python manage.py periodicdataupdate
  prepareforfiltering:
    container_name: prepareforfiltering_youmed
    image: backend-base
    build:
      context: .
      dockerfile: Dockerfile
      target: backend-base
    environment:
      - YOUTUBE_CLIENT_SECRET=${YOUTUBE_CLIENT_SECRET}
      - APP_SECRET_KEY=${APP_SECRET_KEY}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_HOST=mysql
      - APP_HOST=${APP_HOST}
    networks:
      - youmed
    depends_on:
      - mysql
      - backend
    restart: on-failure
    entrypoint: python manage.py prepareforfiltering
  backend:
    container_name: backend_youmed
    image: backend-gunicorn
    build:
      context: .
      dockerfile: Dockerfile
      target: backend-gunicorn
    environment:
      - YOUTUBE_CLIENT_SECRET=${YOUTUBE_CLIENT_SECRET}
      - APP_SECRET_KEY=${APP_SECRET_KEY}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_HOST=mysql
      - APP_HOST=${APP_HOST}
    networks:
      - youmed
    depends_on:
      - mysql
    restart: on-failure
  nginx:
    container_name: nginx_youmed
    image: prod-nginx
    tty: true
    build:
      context: .
      dockerfile: Dockerfile
      target: prod-nginx
    ports:
      - "80:80"
    networks:
      - youmed
    depends_on:
      - backend
    restart: on-failure

networks:
  youmed:
    driver: bridge

volumes:
  mysql:
